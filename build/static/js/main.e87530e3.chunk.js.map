{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","Person","id","name","number","onRemove","style","margin","background","onClick","Persons","persons","map","key","PersonForm","onNameChange","nameValue","onNumberChange","numberValue","onSubmit","invalidInput","length","type","disabled","Notification","message","className","baseUrl","axios","get","then","response","data","person","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","useEffect","personService","initialPersons","console","log","resetFields","displayNotification","setTimeout","filteredPersons","toLowerCase","includes","event","target","preventDefault","personFound","find","p","window","confirm","returnedPerson","catch","error","modify","concat","add","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e87530e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <span>Filter Shown with: </span>\r\n      <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Person = ({ id, name, number, onRemove }) => (\r\n  <li>\r\n    {name}: {number}\r\n    <button id={id} style={{ margin: '10px', background: '#FFF' }} onClick={onRemove(id, name)}>\r\n      delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = ({ persons, onRemove }) => (\r\n  <ul>\r\n    {persons.map(({ id, name, number }) => {\r\n      return <Person key={name} id={id} name={name} number={number} onRemove={onRemove} />;\r\n    })}\r\n  </ul>\r\n);\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({ onNameChange, nameValue, onNumberChange, numberValue, onSubmit }) => {\r\n  /*\r\n  This was not in assignment, but I thought it's reasonable to expect not empty input values.\r\n  Optional approach woul've been to use the alert in here as well.\r\n  */\r\n\r\n  const invalidInput = nameValue.length < 1 || numberValue < 1;\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={nameValue} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={numberValue} onChange={onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={invalidInput}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => (message === null ? null : <div className={type}>{message}</div>);\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = person => {\r\n  const request = axios.post(baseUrl, person);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, person) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, person);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { Persons, PersonForm, Filter, Notification } from './components';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState();\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  // Used just for logging the changes in persons\n  useEffect(() => {\n    console.log('Persons:', persons);\n  }, [persons]);\n\n  const resetFields = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const displayNotification = (type, message) => {\n    setNotification({ type, message });\n    setTimeout(() => {\n      setNotification(null);\n    }, 3000);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    const add = person => {\n      personService.create(person).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        resetFields();\n\n        displayNotification('success', `Added ${person.name}`);\n      });\n    };\n\n    const modify = (id, person) => {\n      const { name } = person;\n\n      if (window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(id, person)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => (person.id !== id ? person : returnedPerson)));\n            resetFields();\n\n            displayNotification('success', `Updated ${name}`);\n          })\n          .catch(error => {\n            displayNotification('error', `the person '${name}' was already deleted from the server`);\n\n            setPersons(persons.filter(person => person.id !== id));\n\n            resetFields();\n          });\n      }\n    };\n\n    const person = { name: newName, number: newNumber };\n    const personFound = persons.find(p => p.name === person.name);\n\n    personFound ? modify(personFound.id, person) : add(person);\n  };\n\n  const removePerson = (id, name) => () => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id));\n\n        displayNotification('success', `Removed ${name}`);\n      });\n    }\n  };\n\n  const handleNameChange = event => setNewName(event.target.value);\n  const handleNumberChange = event => setNewNumber(event.target.value);\n  const handleFilterChange = event => setFilter(event.target.value);\n\n  /*\n  Maybe \"startsWith\" would be more appropriate, but assignment example 2.9* seems to use something like this.\n  Also didn't feel the need to create a state for this, since it can be derived from persons and filter states.\n  Not sure, what's the convention in these cases.\n  */\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notification && <Notification message={notification.message} type={notification.type} />}\n      <Filter value={filter} onChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        onNameChange={handleNameChange}\n        nameValue={newName}\n        onNumberChange={handleNumberChange}\n        numberValue={newNumber}\n        onSubmit={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} onRemove={removePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}